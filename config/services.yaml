# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    bind:
      $googleApiKey: '%env(GOOGLE_API_KEY)%'

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\RideBooking\Writes\BusinessLogic\Gateways\TripScanning\TripScanner:
    class: App\RideBooking\Writes\Adapters\Secondary\Gateways\TripScanning\GoogleTripScanner

  App\RideBooking\Writes\BusinessLogic\Gateways\Repositories\RiderRepository:
    factory: [ 'App\RideBooking\Writes\Adapters\Secondary\Gateways\Repositories\FakeRiderRepositoryFactory', 'create' ]

  App\RideBooking\Writes\BusinessLogic\Gateways\Repositories\RideRepository:
    class: 'App\RideBooking\Writes\Adapters\Secondary\Gateways\Repositories\Doctrine\DoctrineRideRepository'

  App\RideBooking\Writes\BusinessLogic\Gateways\Repositories\RidePriceRepository:
    class: 'App\RideBooking\Writes\Adapters\Secondary\Gateways\Repositories\Doctrine\DoctrineRidePriceRepository'

  App\RideBooking\Writes\BusinessLogic\Gateways\UuidGeneration\UuidGenerator:
    class: 'App\RideBooking\Writes\Adapters\Secondary\Gateways\UuidGeneration\RandomUuidGenerator'
